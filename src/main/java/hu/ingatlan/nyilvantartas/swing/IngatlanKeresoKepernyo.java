package hu.ingatlan.nyilvantartas.swing;

import hu.ingatlan.kereso.entity.IngatlanAdat;
import hu.ingatlan.nyilvantartas.adatbazis.IngatlanNyilvantartasDML;
import static hu.ingatlan.nyilvantartas.adatbazis.IngatlanNyilvantartasDML.ingatlanAdatHelyrajziSzamAlapjánLekerdezesSQL;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Böröczky Csaba
 */
public class IngatlanKeresoKepernyo extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(IngatlanKeresoKepernyo.class.getName());

    /**
     * Creates new form Ablak
     */
    public IngatlanKeresoKepernyo() {
        initComponents();
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jBecsultErtekLabel;
    private javax.swing.JTextPane jBecsultErtekTextPanel;
    private javax.swing.JButton jBecsultErtekUpdateListabolsButton1;
    private javax.swing.JLabel jHelyrajziSzamLabel;
    private javax.swing.JTextPane jHelyraziSzamTextPanel1;
    private javax.swing.JList<IngatlanAdat> jIngatlanList;
    private javax.swing.JButton jKeresesButton;
    private javax.swing.JButton jKilepesButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jTorlesAListabolsButton;
    private DefaultListModel<IngatlanAdat> ingatlanAdatok;
    private IngatlanAdat kivalasztottIngatlanAdat = new IngatlanAdat();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jKilepesButton = new javax.swing.JButton();
        jKeresesButton = new javax.swing.JButton();
        jTorlesAListabolsButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jBecsultErtekTextPanel = new javax.swing.JTextPane();
        jHelyrajziSzamLabel = new javax.swing.JLabel();
        jBecsultErtekUpdateListabolsButton1 = new javax.swing.JButton();
        jBecsultErtekLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jHelyraziSzamTextPanel1 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jIngatlanList = new javax.swing.JList<>();

        ingatlanAdatok = new DefaultListModel();
        jIngatlanList = new javax.swing.JList(ingatlanAdatok);
        ingatlanAdatokKeresese(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jKilepesButton.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jKilepesButton.setForeground(new java.awt.Color(255, 0, 51));
        jKilepesButton.setText("Kilépés");
        jKilepesButton.setToolTipText("Ha a gombra kattintasz kilép az alkalmazásból");
        jKilepesButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jKilepesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jKilepesButtonActionPerformed(evt);
            }
        });

        jKeresesButton.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jKeresesButton.setText("Keresés");
        jKeresesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jKeresesButtonActionPerformed(evt);
            }
        });

        jTorlesAListabolsButton.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jTorlesAListabolsButton.setText("Törlés a listából");
        jTorlesAListabolsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTorlesAListabolsButtonActionPerformed(evt);
            }
        });

        jBecsultErtekTextPanel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jScrollPane2.setViewportView(jBecsultErtekTextPanel);

        jHelyrajziSzamLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jHelyrajziSzamLabel.setText("Helyrajzi szám:");

        jBecsultErtekUpdateListabolsButton1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jBecsultErtekUpdateListabolsButton1.setText("Becsült érték frissítése");
        jBecsultErtekUpdateListabolsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBecsultErtekUpdateListabolsButton1ActionPerformed(evt);
            }
        });

        jBecsultErtekLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jBecsultErtekLabel.setText("Becsült érték:");

        jHelyraziSzamTextPanel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jScrollPane3.setViewportView(jHelyraziSzamTextPanel1);

        jIngatlanList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jIngatlanList.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(javax.swing.JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                Component renderer = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (renderer instanceof javax.swing.JLabel && value instanceof IngatlanAdat) {
                    IngatlanAdat ingatlanAdatMegjelenites = (IngatlanAdat) value;
                    ((javax.swing.JLabel) renderer).setText(ingatlanAdatMegjelenites.getTulajdonos() + " " + ingatlanAdatMegjelenites.getHelyrajziSzam() + " " + ingatlanAdatMegjelenites.getAlapterulet() + " " + ingatlanAdatMegjelenites.getBecsultErtek());
                }
                return renderer;
            }
        });
        jIngatlanList.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                javax.swing.JList list = (javax.swing.JList) evt.getSource();
                ingatlanAdatKivalasztas(list.getSelectedValue());

            }
        });
        jScrollPane4.setViewportView(jIngatlanList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jHelyrajziSzamLabel)
                                                        .addComponent(jBecsultErtekLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(24, 24, 24)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jBecsultErtekUpdateListabolsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jKeresesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(387, 387, 387)
                                                .addComponent(jKilepesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jTorlesAListabolsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(322, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jHelyrajziSzamLabel)
                                        .addComponent(jKeresesButton)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jBecsultErtekUpdateListabolsButton1)
                                        .addComponent(jBecsultErtekLabel)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addComponent(jTorlesAListabolsButton)
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(122, 122, 122)
                                .addComponent(jKilepesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))
        );

        WindowListener wl = new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                kilpesAction();
            }
        };

        this.addWindowListener(wl);
        pack();
    }// </editor-fold>                        

    private void jKilepesButtonActionPerformed(java.awt.event.ActionEvent evt) {
        kilpesAction();
    }

    private void kilpesAction() {
        Object[] lehetosegek = {"Biztosan", "Mégsem"};
        int valasz = JOptionPane.showOptionDialog(null, "Biztosan kilépsz a programból?", "Kilépés",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                null, lehetosegek, lehetosegek[0]);
        if (valasz == 0) {
            this.setVisible(false);
        }
    }

    private void jKeresesButtonActionPerformed(java.awt.event.ActionEvent evt) {
        kivalasztottIngatlanAdat = new IngatlanAdat();
        kivalasztottIngatlanAdat.setHelyrajziSzam(jHelyraziSzamTextPanel1.getText());
        ingatlanAdatokKeresese(false);
    }

    private void jTorlesAListabolsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            IngatlanNyilvantartasDML.torlesIngatlanAdatHelyrajziSzamAlapjánLekerdezesSQL(kivalasztottIngatlanAdat.getHelyrajziSzam());
            ingatlanAdatokKeresese(true);
        } catch (IllegalArgumentException ex) {
            System.getLogger(IngatlanKeresoKepernyo.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Hiba!", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            System.getLogger(IngatlanKeresoKepernyo.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            JOptionPane.showMessageDialog(this, "Hiba a lekérdezés során", "Hiba!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void jBecsultErtekUpdateListabolsButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            IngatlanNyilvantartasDML.bescsultErtekIngatlanAdatHelyrajziSzamAlapjánLekerdezesSQL(kivalasztottIngatlanAdat, jBecsultErtekTextPanel.getText());
            ingatlanAdatokKeresese(true);
        } catch (IllegalArgumentException ex) {
            System.getLogger(IngatlanKeresoKepernyo.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Hiba!", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            System.getLogger(IngatlanKeresoKepernyo.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            JOptionPane.showMessageDialog(this, "Hiba a lekérdezés során", "Hiba!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void ingatlanAdatokKeresese(boolean ujraOlvasas) {
        ingatlanAdatok.removeAllElements();
        try {
            List<IngatlanAdat> ingatlanAdatokBetoltes = null;
            if (ujraOlvasas) {
                ingatlanAdatokBetoltes = IngatlanNyilvantartasDML.ingatlanAdatLekerdezesSQL();
            } else {
                ingatlanAdatokBetoltes = IngatlanNyilvantartasDML.ingatlanAdatHelyrajziSzamAlapjánLekerdezesSQL(kivalasztottIngatlanAdat.getHelyrajziSzam());
            }
                    
            ingatlanAdatokBetoltes.stream().forEach(ingatlanAdat
                    -> {
                ingatlanAdatok.addElement(ingatlanAdat);
            });
        } catch (IllegalArgumentException ex) {
            System.getLogger(IngatlanKeresoKepernyo.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            JOptionPane.showMessageDialog(this, "Hiba!", ex.getLocalizedMessage(), JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            System.getLogger(IngatlanKeresoKepernyo.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            JOptionPane.showMessageDialog(this, "Hiba a lekérdezés során", "Hiba!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void ingatlanAdatKivalasztas(Object kivalasztottIngatlanAdatParam) {
        this.kivalasztottIngatlanAdat = (IngatlanAdat) kivalasztottIngatlanAdatParam;
    }
}
